name: Build Android APK

on:
  push:
    branches: [ main ]

env:
  ANDROID_HOME: /usr/local/android-sdk
  PATH: $ANDROID_HOME/cmdline-tools/latest/bin:$PATH:/usr/bin:/bin

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - uses: actions/checkout@v4

    - name: Configure APT sources
      run: |
        sudo sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list
        sudo sed -i 's/security.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list

    - name: Install essential tools (with full verification)
      run: |
        # 强制更新APT缓存
        for i in {1..5}; do
          if sudo apt-get update; then
            echo "APT update succeeded on attempt $i"
            break
          else
            echo "APT update failed on attempt $i"
            [ $i -eq 5 ] && exit 1
            sleep 15
          fi
        done

        # 安装核心工具（带重试机制）
        CORE_TOOLS="tar gzip zip unzip xz-utils bzip2 ca-certificates"
        for i in {1..5}; do
          if sudo apt-get install -y --no-install-recommends $CORE_TOOLS; then
            echo "Core tools installed successfully"
            break
          else
            echo "Installation failed on attempt $i"
            [ $i -eq 5 ] && exit 1
            sleep 15
          fi
        done

        # 双重验证
        if ! command -v tar >/dev/null; then
          echo "::error::tar still missing after installation"
          echo "=== System diagnostics ==="
          dpkg -l | grep tar || true
          ls -l /usr/bin/tar /bin/tar || true
          exit 1
        fi

        echo "=== Tool versions ==="
        tar --version
        gzip --version
        unzip -v

    - name: Verify system environment
      run: |
        echo "=== PATH ==="
        echo $PATH
        echo "=== Essential binaries ==="
        which tar gzip unzip
        ls -l $(which tar) $(which gzip) $(which unzip)

    - name: Install system dependencies
      run: |
        sudo apt-get install -y \
          git openjdk-17-jdk \
          python3-pip autoconf libtool \
          pkg-config zlib1g-dev libncurses5-dev \
          libtinfo6 cmake libffi-dev libssl-dev \
          libxml2-dev libxslt-dev

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Android SDK
      run: |
        sudo mkdir -p $ANDROID_HOME
        sudo chmod -R 777 $ANDROID_HOME
        wget -q --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 5 \
          https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip -d $ANDROID_HOME/cmdline-tools
        mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
        yes | sdkmanager --licenses > /dev/null 2>&1
        sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34"

    - name: Install Buildozer
      run: |
        python -m pip install --upgrade pip wheel
        pip install --no-cache-dir \
          buildozer==1.5.0 \
          cython==0.29.33

    - name: Initialize Buildozer
      run: |
        buildozer android update
        buildozer check

    - name: Build APK (with retry)
      run: |
        for i in {1..3}; do
          buildozer -v android clean && \
          buildozer -v android debug 2>&1 | tee build.log && \
          ([ -f bin/*.apk ] || (cat build.log && exit 1)) && break
          echo "Build attempt $i failed, retrying..."
          sleep 15
        done

    - name: Verify APK
      run: |
        ls -lh bin/
        $ANDROID_HOME/build-tools/34.0.0/aapt dump badging bin/*.apk

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: comic-reader-apk
        path: bin/*.apk
        retention-days: 7
        if-no-files-found: error
